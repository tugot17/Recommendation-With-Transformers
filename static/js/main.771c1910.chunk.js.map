{"version":3,"sources":["hooks/useFetch.js","components/GameList/GameDetails.js","components/GameList/GameList.js","components/App/App.js","components/Layout/listItems.js","components/Layout/Layout.js","reportWebVitals.js","index.js"],"names":["ACTIONS","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","GameDetailsDialog","game","useState","open","setOpen","url","cache","useRef","initialState","status","error","data","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","a","current","fetch","mode","headers","response","json","message","fetchData","useFetch","appid","handleClose","console","log","Dialog","aria-labelledby","id","name","dividers","gutterBottom","detailed_description","Button","autoFocus","useStyles","makeStyles","display","flexWrap","justifyContent","overflow","backgroundColor","background","paper","width","gridList","height","mixins","toolbar","minHeight","icon","topTitleBar","GameList","gameData","selectedGame","setSelectedGame","GridList","cellHeight","cols","map","GridListTile","alt","Title","src","GridListTileBar","titlePosition","actionIcon","actionPosition","title","subtitle","Release_Date","substring","Price","App","games","setGames","Papa","parse","download","header","skipEmptyLines","complete","results","slice","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","Copyright","align","Link","href","Date","getFullYear","paddingRight","toolbarIcon","alignItems","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","container","stickyCopyright","bottom","left","transform","Layout","darkState","setDarkState","palletType","mainPrimaryColor","blue","purple","mainSecondaryColor","orange","deepOrange","darkTheme","createMuiTheme","main","secondary","ThemeProvider","CssBaseline","AppBar","clsx","Toolbar","edge","component","noWrap","Switch","checked","onChange","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Box","pt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.771c1910.chunk.js","sourcesContent":["import { useEffect, useRef, useReducer } from 'react';\n\nconst ACTIONS = {\n  FETCHING: 'FETCHING',\n  FETCHED: 'FETCHED',\n  FETCH_ERROR: 'FETCH_ERROR'\n}\n\nconst useFetch = (url) => {\n  const cache = useRef({});\n\n  const initialState = {\n    status: 'idle',\n    error: null,\n    data: [],\n  };\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case ACTIONS.FETCHING:\n        return { ...initialState, status: ACTIONS.FETCHING };\n      case ACTIONS.FETCHED:\n        return { ...initialState, status: ACTIONS.FETCHED, data: action.payload };\n      case ACTIONS.FETCH_ERROR:\n        return { ...initialState, status: ACTIONS.FETCH_ERROR, error: action.payload };\n      default:\n        return state;\n    }\n  }, initialState);\n\n  useEffect(() => {\n    let cancelRequest = false;\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: ACTIONS.FETCHING });\n      if (cache.current[url]) {\n        const data = cache.current[url];\n        dispatch({ type: ACTIONS.FETCHED, payload: data });\n      } else {\n        try {\n          const response = await fetch(url, {\n            mode: 'cors', // no-cors, *cors, same-origin\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          });\n          const data = await response.json();\n          cache.current[url] = data;\n          if (cancelRequest) return;\n          dispatch({ type: ACTIONS.FETCHED, payload: data });\n        } catch (error) {\n          if (cancelRequest) return;\n          dispatch({ type: ACTIONS.FETCH_ERROR, payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return function cleanup() {\n      cancelRequest = true;\n    };\n  }, [url]);\n\n  return state;\n};\n\nexport {\n  useFetch, ACTIONS\n}","import { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useFetch } from \"../../hooks/useFetch\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function GameDetailsDialog({ game = {} }) {\n  const [open, setOpen] = useState(false);\n\n  const { status, data, error } = useFetch(\n    `https://store.steampowered.com/api/appdetails?appids=${game.appid || 217920}&key=546BFB646C593E45E6A294F26BF60C07`\n  );\n\n  useEffect(() => {\n    setOpen(game.appid != null);\n  }, [game]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  console.log(status, data, error);\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        {data.name}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom>{data.detailed_description}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport GameDetailsDialog from \"./GameDetails\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  gridList: {\n    width: \"100%\",\n    height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 60px)`,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n  topTitleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     appid: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function GameList({ gameData }) {\n  const classes = useStyles();\n  const [selectedGame, setSelectedGame] = useState({});\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        cellHeight={240}\n        className={classes.gridList}\n        cols={4}\n        spacing={12}\n      >\n        {gameData.map((game) => (\n          <GridListTile key={game.appid}>\n            <LazyLoadImage\n              alt={game.Title}\n              height={240}\n              src={`https://cdn.akamai.steamstatic.com/steam/apps/${game.appid}/header.jpg?t=1599172963`} // use normal <img> attributes as props\n              width={\"auto\"}\n            />\n            <GridListTileBar\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={`star ${game.Title}`} className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.topTitleBar}\n            />\n            <GridListTileBar\n              title={game.Title}\n              subtitle={\n                <span>\n                  Released:{\" \"}\n                  {game.Release_Date.substring(0, 4) === \"1970\"\n                    ? \"Unknown\"\n                    : game.Release_Date.substring(0, 4)}\n                  , Price: {game.Price === \"0\" ? \"Free\" : `${game.Price}$`}\n                </span>\n              }\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${game.Title}`}\n                  className={classes.icon}\n                  onClick={() => setSelectedGame(game.appid)}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <GameDetailsDialog game={selectedGame} />\n    </div>\n  );\n}\n","import {useEffect, useState} from \"react\";\nimport Papa from 'papaparse';\nimport GameList from \"../GameList/GameList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    width: '100%'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [games, setGames] = useState([])\n\n  useEffect(() => {\n    Papa.parse(\"/Recommendation-With-Transformers/app_id_info.csv\", {\n      download: true,\n      header: true,\n      skipEmptyLines: true,\n      complete: function(results) {\n        console.log(results)\n        setGames(results.data)\n      }\n    });\n  }, [])\n  return (\n    <div className={classes.root}>\n      <GameList gameData={games.slice(0, 20)} />\n    </div>\n  );\n}\n\nexport default App;\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Games\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Stats\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n  </div>\n);","import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport {\n  orange,\n  deepOrange,\n  purple,\n  blue,\n} from \"@material-ui/core/colors\";\n\n// For Switch Theming\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyrights © \"}\n      <Link color=\"inherit\" href=\"https://github.com/tugot17/Recommendation-With-Transformers\">\n        Recommendation With Transformers\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => {\n  return ({\n    root: {\n      display: \"flex\"\n    },\n    toolbar: {\n      paddingRight: 24 // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    menuButtonHidden: {\n      display: \"none\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9)\n      }\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\"\n    },\n    container: {\n      padding: 0,\n      height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 60px)`,\n    },\n    stickyCopyright: {\n      position: \"fixed\",\n      bottom: 0,\n      left: \"50%\",\n      transform: 'translate(-50%, -8px)',\n    }\n  })\n});\n\nexport default function Layout( { children }) {\n  const [open, setOpen] = useState(false);\n  const [darkState, setDarkState] = useState(true);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? blue[900] : purple[600];\n  const mainSecondaryColor = darkState ? orange[900] : deepOrange[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n  const classes = useStyles();\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Dashboard\n            </Typography>\n            <Switch checked={darkState} onChange={handleThemeChange} />\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n              { children }\n          </Container>\n          <Box pt={4} className={classes.stickyCopyright}>\n            <Copyright />\n          </Box>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport Layout from \"./components/Layout/Layout\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout>\n      <App />\n    </Layout>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}