{"version":3,"sources":["components/GameList/GameDetails.js","components/GameList/GameList.js","components/App/App.js","components/Layout/listItems.js","components/Layout/Layout.js","reportWebVitals.js","index.js"],"names":["styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","iframe","transform","title","DialogTitle","withStyles","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","width","height","MuiDialogContent","DialogActions","MuiDialogActions","useStyles","makeStyles","GameDetailsDialog","game","useState","open","setOpen","useEffect","appid","handleClose","Dialog","aria-labelledby","maxWidth","PaperProps","style","backgroundImage","id","Title","dividers","frameBorder","src","Button","startIcon","autoFocus","display","flexWrap","justifyContent","overflow","backgroundColor","background","paper","gridList","mixins","toolbar","minHeight","icon","topTitleBar","GameList","gameData","selectedGame","setSelectedGame","GridList","cellHeight","cols","map","GridListTile","alt","GridListTileBar","titlePosition","actionIcon","actionPosition","subtitle","Release_Date","substring","Price","App","games","setGames","Papa","parse","download","header","skipEmptyLines","complete","results","console","log","data","slice","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","Copyright","align","Link","href","Date","getFullYear","paddingRight","toolbarIcon","alignItems","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","container","stickyCopyright","bottom","left","Layout","darkState","setDarkState","palletType","mainPrimaryColor","blue","purple","mainSecondaryColor","orange","deepOrange","darkTheme","createMuiTheme","type","main","secondary","ThemeProvider","CssBaseline","AppBar","clsx","Toolbar","edge","component","noWrap","Switch","checked","onChange","Drawer","Divider","List","Container","Box","pt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad119b17.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  iframe: {\n    transform: \"translate(25%, 25%) scale(1.5)\",\n  },\n  title: {\n    color: '#fff'\n  }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: 646 * 1.55,\n    height: 190 * 1.6,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst useStyles = makeStyles(styles);\n\nexport default function GameDetailsDialog({ game = {}, onClose = () => {} }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setOpen(game.appid != null);\n  }, [game]);\n\n  const handleClose = () => {\n    onClose({});\n  };\n\n  return (\n    game.appid != null && (\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        maxWidth={\"lg\"}\n        open={open}\n        PaperProps={{\n          style: {\n            backgroundImage: `url('https://cdn.akamai.steamstatic.com/steam/apps/${game.appid}/page_bg_generated_v6b.jpg')`,\n          },\n        }}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          <span className={classes.title}>{game.Title}</span>\n        </DialogTitle>\n        <DialogContent dividers>\n          <iframe\n            title={game.Title}\n            className={classes.iframe}\n            width=\"646\"\n            height=\"190\"\n            frameBorder=\"0\"\n            src={`https://store.steampowered.com/widget/${game.appid}`}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            startIcon={<StarBorderIcon />}\n            onClick={handleClose}\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            Add to my list\n          </Button>\n          <Button autoFocus onClick={handleClose}>\n            <span className={classes.title}>Close</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport GameDetailsDialog from \"./GameDetails\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  gridList: {\n    width: \"100%\",\n    height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 60px)`,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n  topTitleBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nexport default function GameList({ gameData }) {\n  const classes = useStyles();\n  const [selectedGame, setSelectedGame] = useState({});\n\n  return (\n    <div className={classes.root} id=\"main-grid\">\n      <GridList\n        cellHeight={240}\n        className={classes.gridList}\n        cols={4}\n        spacing={12}\n      >\n        {gameData.map((game) => (\n          <GridListTile key={game.appid}>\n            <LazyLoadImage\n              alt={game.Title}\n              height={240}\n              src={`https://cdn.akamai.steamstatic.com/steam/apps/${game.appid}/header.jpg?t=1599172963`} // use normal <img> attributes as props\n              width={\"auto\"}\n            />\n            <GridListTileBar\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton\n                  aria-label={`star ${game.Title}`}\n                  className={classes.icon}\n                >\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.topTitleBar}\n            />\n            <GridListTileBar\n              title={game.Title}\n              subtitle={\n                <span>\n                  {game.Release_Date.substring(0, 4) === \"1970\"\n                    ? \"\"\n                    : `Released: ${game.Release_Date.substring(0, 4)}, `}\n                  {game.Price === \"0\" ? \"\" : `Price: ${game.Price}$`}\n                </span>\n              }\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${game.Title}`}\n                  className={classes.icon}\n                  onClick={() => setSelectedGame(game)}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <GameDetailsDialog game={selectedGame} onClose={setSelectedGame} />\n    </div>\n  );\n}\n","import {useEffect, useState} from \"react\";\nimport Papa from 'papaparse';\nimport GameList from \"../GameList/GameList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    width: '100%'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [games, setGames] = useState([])\n\n  useEffect(() => {\n    Papa.parse(\"/Recommendation-With-Transformers/app_id_info.csv\", {\n      download: true,\n      header: true,\n      skipEmptyLines: true,\n      complete: function(results) {\n        console.log(results)\n        setGames(results.data)\n      }\n    });\n  }, [])\n  return (\n    <div className={classes.root}>\n      <GameList gameData={games.slice(0, 20)} />\n    </div>\n  );\n}\n\nexport default App;\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Games\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Stats\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n  </div>\n);","import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport {\n  orange,\n  deepOrange,\n  purple,\n  blue,\n} from \"@material-ui/core/colors\";\n\n// For Switch Theming\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyrights © \"}\n      <Link color=\"inherit\" href=\"https://github.com/tugot17/Recommendation-With-Transformers\">\n        Recommendation With Transformers\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => {\n  return ({\n    root: {\n      display: \"flex\"\n    },\n    toolbar: {\n      paddingRight: 24 // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    menuButtonHidden: {\n      display: \"none\"\n    },\n    title: {\n      flexGrow: 1\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9)\n      }\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\"\n    },\n    container: {\n      padding: 0,\n      height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 60px)`,\n    },\n    stickyCopyright: {\n      position: \"fixed\",\n      bottom: 0,\n      left: \"50%\",\n      transform: 'translate(-50%, -8px)',\n    }\n  })\n});\n\nexport default function Layout( { children }) {\n  const [open, setOpen] = useState(false);\n  const [darkState, setDarkState] = useState(true);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? blue[900] : purple[600];\n  const mainSecondaryColor = darkState ? orange[900] : deepOrange[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n  const classes = useStyles();\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Dashboard\n            </Typography>\n            <Switch checked={darkState} onChange={handleThemeChange} />\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n              { children }\n          </Container>\n          <Box pt={4} className={classes.stickyCopyright}>\n            <Copyright />\n          </Box>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport Layout from \"./components/Layout/Layout\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout>\n      <App />\n    </Layout>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}