stages:
  prepare_dataset:
    cmd: python cml_scripts/prepare_dataset.py
    deps:
      - cml_scripts/prepare_dataset.py
      - data/data.csv.gz
    outs:
      - data/sequences.pickle

  train_model:
    cmd: python -m cml_scripts.train_model
    deps:
      - cml_scripts/train_model.py
      - data/sequences.pickle
    params:
      - project_name
      - dataloader.num_workers
      - train.epochs
      - train.batch_size
      - train.train_size_ratio
    outs:
      - checkpoints/

  validate_model:
    cmd: python -m cml_scripts.evaluate_metrics
    deps:
      - cml_scripts/evaluate_metrics.py
    params:
      - project_name
      - dataloader.num_workers
      - train.epochs
      - train.batch_size
      - train.train_size_ratio

  save_model_from_last_checkpoint_as_state_dict:
    cmd: >-
      python -m 
      cml_scripts.save_model_from_last_checkpoint_as_state_dict
    deps:
      - '${checkpoints_dir}'
    params:
      - checkpoints_dir
      - best_model_save_path
      - dataloader
      - train.epochs
    outs:
      - '${best_model_save_path}'

  train_neighbours_model:
    cmd: python -m cml_scripts.train_neighbours_model
    deps:
      - cml_scripts/train_neighbours_model.py
      - data/train_data.pickle
      - data/val_data.pickle
    params:
      - project_name
      - dataloader.num_workers
      - train_neighbours.epochs
      - train_neighbours.batch_size
      - neighbours_checkpoints_dir
    outs:
      - '${neighbours_checkpoints_dir}'

##  commended due to the long (1h) computation time
#  validate_baseline_model:
#    cmd: python -m cml_scripts.evaluate_baseline_metrics
#    deps:
#      - cml_scripts/evaluate_baseline_metrics.py
#    params:
#      - project_name
#      - train.train_size_ratio
#      - baseline.n_neighbors
#    metrics:
#      - cml_scripts/baseline_metrics.json:
#          cache: false

